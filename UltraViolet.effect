-- Ultra Violet shader

-- The globals that will be expected to exist
EFFECTNAME = "Ultra Violet"

UNIFORMCOUNT = 0
UNIFORMNAMES = { }
UNIFORMVALUE = { }
UNIFORMTYPE = { }
UNIFORMID = { }

UNIFORMCOUNT2 = 2
UNIFORMNAMES2 = { "diffuseTexture" , "sampleDist"}
UNIFORMVALUE2 = { 0 , 1.0 }
UNIFORMTYPE2 = { "sampler" , "float" }
UNIFORMID2 = { 0 , 0 }

-- Internal data
PROGRAMID = 0
RADIALID = 0
COLORBUFFER = 0

--[[
	create any resources that are needed for the lifetime of the effect
]]--
function alloc(userdata)
	PARENT = userdata
	PROGRAMID = loadshader("Shader", "UltraViolet", UNIFORMCOUNT, UNIFORMNAMES, UNIFORMVALUE, UNIFORMTYPE, UNIFORMID, 0)
	RADIALID = loadshader("Shader", "radial", UNIFORMCOUNT2, UNIFORMNAMES2, UNIFORMVALUE2, UNIFORMTYPE2, UNIFORMID2, 0)
end

--[[
	free all resources
]]--
function dealloc()

end

--[[
	create any resources that are needed for the immidiate use of the effect
]]--
function init()
	COLORBUFFER = createFrameBuffer(PARENT, VIDEOWIDTH , VIDEOHEIGHT)
end

--[[
	free resources created in init
]]--
function deinit()
	freeFrameBuffer(PARENT, COLORBUFFER);
end

--[[
	render all passes with the final pass to render buffer -1
]]--
function render(time , rotx, roty, rotz, audioLevel, rotm, orientation)

	-- quantify the primary colors into COLORBUFFER
	renderToFrameBuffer(PARENT, PROGRAMID, COLORBUFFER, 1, 0.0, 1.0, 1.0, 0.0, 0.0)
	
	setShaderSampler(PARENT, RADIALID, UNIFORMID2[1], 2, COLORBUFFER)
	
	alevel = audioLevel * 10.0

	setShaderFloatUniform(PARENT, RADIALID, UNIFORMID2[2], alevel)
	
	renderToFrameBuffer(PARENT, RADIALID, DEFAULTFRAMEBUFFER, 1, 0.0, 1.0, 1.0, 0.0, 0.0)
end