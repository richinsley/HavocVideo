-- RadiateBluR Effect 

-- The globals that will be expected to exist
EFFECTNAME = "Super Symetry"

-- shader 1
UNIFORMCOUNT1 = 2
UNIFORMNAMES1 = { "alpha" , "diffuseTexture" }
UNIFORMVALUE1 = { 1.0 , 0 }
UNIFORMTYPE1 = { "float" , "sampler"}
UNIFORMID1 = { }

-- shader 2
UNIFORMCOUNT2 = 6
UNIFORMNAMES2 = { "mixamount" , "mixsampler" , "diffuseTexture" , "scaleX" , "scaleY" , "atten" }
UNIFORMVALUE2 = { 0.9 , 0 , 0 , 0.98 , 0.98 , 1.0 } -- initial values
UNIFORMID2 = { }
UNIFORMTYPE2 = { "float", "sampler" , "sampler" , "float" , "float" , "float" }

-- Internal data
DEFAULT = 0
MIXSCALE = 0
FLIP = -1.0

ACCUMULATORS = { 0 , 0 }

-- create any resources that are needed for the lifetime of the effect
function alloc(userdata)
	PARENT = userdata
	DEFAULT = loadshader("Shader", "DefaultShader", UNIFORMCOUNT1, UNIFORMNAMES1, UNIFORMVALUE1, UNIFORMTYPE1, UNIFORMID1, 0)
	MIXSCALE = loadshader("Shader", "MixScale", UNIFORMCOUNT2, UNIFORMNAMES2, UNIFORMVALUE2, UNIFORMTYPE2, UNIFORMID2, 0)
end

-- free all resources
function dealloc()

end

-- create any resources that are needed for the immidiate use of the effect
function init()
	ACCUMULATORS[1] = createFrameBuffer(PARENT, VIDEOWIDTH, VIDEOHEIGHT)
	ACCUMULATORS[2] = createFrameBuffer(PARENT, VIDEOWIDTH, VIDEOHEIGHT)
	
	resetuniforms(MIXSCALE , UNIFORMCOUNT2, UNIFORMVALUE2, UNIFORMTYPE2, UNIFORMID2 )
end

-- free resources created in init
function deinit()
	freeFrameBuffer(PARENT, ACCUMULATORS[1]);
	freeFrameBuffer(PARENT, ACCUMULATORS[2]);
end

-- render all passes with the final pass to render buffer -1
function render(time , rotx, roty, rotz, audioLevel, rotm, orientation)

	setShaderSampler(PARENT, MIXSCALE, UNIFORMID2[2], 1, ACCUMULATORS[1])
	setShaderSampler(PARENT, MIXSCALE, UNIFORMID2[3], 2, VIDEOTEXTURE)
	
	if orientation == 3 or orientation == 4 then
		renderToFrameBuffer(PARENT, MIXSCALE, ACCUMULATORS[2], 0, 0.0, FLIP, 1.0, 0.0, 0.0)
	else
		renderToFrameBuffer(PARENT, MIXSCALE, ACCUMULATORS[2], 0, 0.0, 1.0, FLIP, 0.0, 0.0)
	end
	
	

	-- flip ACCUMULATORS
	local TACC = ACCUMULATORS[1]
	ACCUMULATORS[1] = ACCUMULATORS[2]
	ACCUMULATORS[2] = TACC

	setShaderSampler(PARENT, DEFAULT, UNIFORMID1[2], 1, ACCUMULATORS[1])
	renderToFrameBuffer(PARENT, DEFAULT, DEFAULTFRAMEBUFFER, 1, 0.0, 1.0, 1.0, 0.0, 0.0)
	
	-- set the sampler back to video texture
	setShaderSampler(PARENT, DEFAULT, UNIFORMID1[2], 0, VIDEOTEXTURE)

	if FLIP == -1.0 then
		FLIP = 1.0
	else
		FLIP = -1.0
	end
end