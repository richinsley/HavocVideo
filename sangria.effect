-- Sangria Effect 

-- The globals that will be expected to exist
EFFECTNAME = "Sangria"

-- shader 1
UNIFORMCOUNT1 = 2
UNIFORMNAMES1 = { "alpha" , "diffuseTexture" }
UNIFORMVALUE1 = { 1.0 , 0 }
UNIFORMTYPE1 = { "float" , "sampler"}
UNIFORMID1 = { }

-- shader 2
UNIFORMCOUNT2 = 6
UNIFORMNAMES2 = { "mixamount" , "mixsampler" , "diffuseTexture" , "scaleX" , "scaleY" , "atten" }
UNIFORMVALUE2 = { 0.9 , 0 , 0 , 0.98 , 0.98 , 1.0 } -- initial values
UNIFORMID2 = { }
UNIFORMTYPE2 = { "float", "sampler" , "sampler" , "float" , "float" , "float" }

NORMALUNIFORMCOUNT = 3
NORMALUNIFORMNAMES = { "diffwidth" , "diffheight" , "diffuseTexture" }
NORMALUNIFORMVALUE = { 0.0 , 0.0 , 0}
NORMALUNIFORMTYPE = { "float" , "float" , "sampler" }
NORMALUNIFORMID = { 0 , 0 , 0 }

APPLECOUNT = 1
APPLEUNIFORMNAMES = { "normalTexture" }
APPLEUNIFORMVALUE = { 0 }
APPLEUNIFORMTYPE = { "sampler" }
APPLEUNIFORMID = { 0 }

-- Internal data
DEFAULT = 0
MIXSCALE = 0
NORMALPROGID = 0
APPLEPROGID = 0

ACCUMULATORS = { 0 , 0 }
NORMALMAP = 0

SCALE = 0.25

-- create any resources that are needed for the lifetime of the effect
function alloc(userdata)
	PARENT = userdata
	DEFAULT = loadshader("Shader", "DefaultShader", UNIFORMCOUNT1, UNIFORMNAMES1, UNIFORMVALUE1, UNIFORMTYPE1, UNIFORMID1, 0)
	MIXSCALE = loadshader("Shader", "MixScale", UNIFORMCOUNT2, UNIFORMNAMES2, UNIFORMVALUE2, UNIFORMTYPE2, UNIFORMID2, 0)
	NORMALPROGID = loadshader("Shader", "CalcNormal", NORMALUNIFORMCOUNT, NORMALUNIFORMNAMES, NORMALUNIFORMVALUE, NORMALUNIFORMTYPE, NORMALUNIFORMID, 0)
	APPLEPROGID = loadshader("Shader", "sangria", APPLECOUNT, APPLEUNIFORMNAMES, APPLEUNIFORMVALUE, APPLEUNIFORMTYPE, APPLEUNIFORMID, 0)
end

-- free all resources
function dealloc()

end

-- create any resources that are needed for the immidiate use of the effect
function init()

	resetuniforms(NORMALPROGID , NORMALUNIFORMCOUNT, NORMALUNIFORMVALUE, NORMALUNIFORMTYPE, NORMALUNIFORMID )
	
	ACCUMULATORS[1] = createFrameBuffer(PARENT, VIDEOWIDTH * SCALE, VIDEOHEIGHT * SCALE)
	ACCUMULATORS[2] = createFrameBuffer(PARENT, VIDEOWIDTH * SCALE, VIDEOHEIGHT * SCALE)
	NORMALMAP = createFrameBuffer(PARENT, VIDEOWIDTH * SCALE, VIDEOHEIGHT * SCALE)
	
	setShaderFloatUniform(PARENT, NORMALPROGID, NORMALUNIFORMID[1], VIDEOWIDTH * SCALE)
	setShaderFloatUniform(PARENT, NORMALPROGID, NORMALUNIFORMID[2], VIDEOHEIGHT * SCALE)
	
	resetuniforms(MIXSCALE , UNIFORMCOUNT2, UNIFORMVALUE2, UNIFORMTYPE2, UNIFORMID2 )
end

-- free resources created in init
function deinit()
	freeFrameBuffer(PARENT, ACCUMULATORS[1]);
	freeFrameBuffer(PARENT, ACCUMULATORS[2]);
	freeFrameBuffer(PARENT, NORMALMAP);
	
	-- set the samplers back to video texture
	setShaderSampler(PARENT, DEFAULT, UNIFORMID1[2], 0, VIDEOTEXTURE)
	setShaderSampler(PARENT, NORMALPROGID, NORMALUNIFORMID[3], 0, VIDEOTEXTURE)
	setShaderSampler(PARENT, MIXSCALE, UNIFORMID2[3], 0, VIDEOTEXTURE)
end

-- render all passes with the final pass to render buffer -1
function render(time , rotx, roty, rotz, audioLevel, rotm, orientation)

	setShaderSampler(PARENT, MIXSCALE, UNIFORMID2[2], 1, ACCUMULATORS[1])
	setShaderSampler(PARENT, MIXSCALE, UNIFORMID2[3], 2, VIDEOTEXTURE)
	renderToFrameBuffer(PARENT, MIXSCALE, ACCUMULATORS[2], 0, 0.0, 1.0, 1.0, 0.0, 0.0)

	-- flip ACCUMULATORS
	local TACC = ACCUMULATORS[1]
	ACCUMULATORS[1] = ACCUMULATORS[2]
	ACCUMULATORS[2] = TACC

	setShaderSampler(PARENT, NORMALPROGID, NORMALUNIFORMID[3], 3, ACCUMULATORS[1])
	renderToFrameBuffer(PARENT, NORMALPROGID, NORMALMAP, 1, 0.0, 1.0, 1.0, 0.0, 0.0)

	setShaderSampler(PARENT, APPLEPROGID, APPLEUNIFORMID[1], 4, NORMALMAP)
	renderToFrameBuffer(PARENT, APPLEPROGID, DEFAULTFRAMEBUFFER, 1, 0.0, 1.0, 1.0, 0.0, 0.0)

end